version: '3.8'

services:
  # Mitmproxy 服务
  mitmproxy:
    image: mitmproxy/mitmproxy
    container_name: mitmproxy_service_main
    ports:
      - "8080:8080" # Mitmproxy 代理端口
      # - "8081:8081" # 如果需要 mitmweb 界面，取消注释此行
    volumes:
      - ./mitmproxy_scripts:/home/mitmproxy/scripts:ro
      - ./mitmproxy_certs:/home/mitmproxy/.mitmproxy
      - ./shared_xhs_data:/home/mitmproxy/xhs_data
    working_dir: /home/mitmproxy
    command: >
      mitmdump
      -s /home/mitmproxy/scripts/xhs_interceptor.py
      --set listen_host=0.0.0.0
      --set block_global=false
      --set flow_detail=0
    restart: unless-stopped
    networks:
      - automation_suite_net
    extra_hosts:
      - "host.docker.internal:host-gateway"

  # 数据上传服务
  uploader:
    build:
      context: ./uploader_service
      dockerfile: Dockerfile
    container_name: uploader_service_main
    env_file:
      - ./.env
    volumes:
      - ./shared_xhs_data:/app/xhs_data
    working_dir: /app
    depends_on:
      - mitmproxy
    restart: unless-stopped
    networks:
      - automation_suite_net
    extra_hosts:
      - "host.docker.internal:host-gateway"

  # Appium 服务实例 1
  appium_server1:
    image: appium/appium
    container_name: appium_server1_main
    ports:
      - "4723:4723"
    volumes:
      - ./appium_configs/server1_caps.json:/app/server1_caps.json:ro
      - ./appium_logs/appium_server1.log:/app/appium_server1.log
    environment:
      - ANDROID_ADB_SERVER_ADDRESS=host.docker.internal
      - ANDROID_ADB_SERVER_PORT=5037
    command: >
      appium server --port 4723 --address 0.0.0.0
      --default-capabilities /app/server1_caps.json
      --use-drivers uiautomator2 --log /app/appium_server1.log --log-level debug
      --allow-insecure adb_shell
    restart: unless-stopped
    networks:
      - automation_suite_net
    extra_hosts:
      - "host.docker.internal:host-gateway"

  # Appium 服务实例 2
  appium_server2:
    image: appium/appium
    container_name: appium_server2_main
    ports:
      - "4725:4725"
    volumes:
      - ./appium_configs/server2_caps.json:/app/server2_caps.json:ro
      - ./appium_logs/appium_server2.log:/app/appium_server2.log
    environment:
      - ANDROID_ADB_SERVER_ADDRESS=host.docker.internal
      - ANDROID_ADB_SERVER_PORT=5037
    command: >
      appium server --port 4725 --address 0.0.0.0
      --default-capabilities /app/server2_caps.json
      --use-drivers uiautomator2 --log /app/appium_server2.log --log-level debug
      --allow-insecure adb_shell
    restart: unless-stopped
    networks:
      - automation_suite_net
    extra_hosts:
      - "host.docker.internal:host-gateway"

  # Appium 服务实例 3
  appium_server3:
    image: appium/appium
    container_name: appium_server3_main
    ports:
      - "4727:4727"
    volumes:
      - ./appium_configs/server3_caps.json:/app/server3_caps.json:ro
      - ./appium_logs/appium_server3.log:/app/appium_server3.log
    environment:
      - ANDROID_ADB_SERVER_ADDRESS=host.docker.internal
      - ANDROID_ADB_SERVER_PORT=5037
    command: >
      appium server --port 4727 --address 0.0.0.0
      --default-capabilities /app/server3_caps.json
      --use-drivers uiautomator2 --log /app/appium_server3.log --log-level debug
      --allow-insecure adb_shell
    restart: unless-stopped
    networks:
      - automation_suite_net
    extra_hosts:
      - "host.docker.internal:host-gateway"

  # XIAOHONGSHUZDH 项目 (Firebase Task Listener)
  firebase_listener:
    build:
      context: . # Dockerfile 位于当前目录 (项目根目录)
      dockerfile: Dockerfile
    container_name: firebase_listener_main
    env_file:
      - ./.env
    environment:
      - IS_IN_DOCKER_CONTAINER=true
      - PYTHONUNBUFFERED=1
    volumes:
      - ./logs:/app/logs
    depends_on:
      - appium_server1
      - appium_server2
      - appium_server3
    restart: unless-stopped
    networks:
      - automation_suite_net
    extra_hosts:
      - "host.docker.internal:host-gateway"

networks:
  automation_suite_net:
    driver: bridge
